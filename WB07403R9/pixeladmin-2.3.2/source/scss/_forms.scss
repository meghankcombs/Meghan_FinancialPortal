//
// Forms
// --------------------------------------------------

.form-control {
  box-shadow: none !important;
}

// Color input
.form-control[type="color"] {
  height: ($line-height-base * $font-size-base) + $padding-base-vertical * 2 + 2px;
  padding: ($padding-base-vertical / 2) ($padding-base-horizontal / 2);
}

// Select box
select {
  &.form-control {
    padding-top: 0;
    padding-bottom: 0;

    line-height: $input-height-base - 2px;
  }

  &.input-sm { line-height: $input-height-small - 2px; }
  &.input-lg { line-height: $input-height-large - 2px; }
}


// Elements
//

legend {
  padding-bottom: 7px;

  color: #666;

  font-size: ($font-size-base * 1.3);
}

label,
optgroup {
  font-weight: 600;
}

label.required:after {
  margin-left: 2px;

  content: "*";

  color: red;
}

.form-control-feedback {
  text-decoration: none !important;
  pointer-events: auto;

  color: $text-color;

  &:hover,
  &:focus {
    color: $text-color;
  }
}

// Sizes
//

.input-sm[type="color"] {
  height: ($line-height-small * $font-size-small) + $padding-small-vertical * 2 + 2px;
  padding: ($padding-small-vertical / 2) ($padding-small-horizontal / 2);
}

.input-lg[type="color"] {
  height: ($line-height-large * $font-size-large) + $padding-large-vertical * 2 + 2px;
  padding: ($padding-large-vertical / 2) ($padding-large-horizontal / 2);
}


// Form states
//

@include pixel-form-state(success, $state-success-text, $state-success-bg, $brand-success);
@include pixel-form-state(warning, $state-warning-text, $state-warning-bg, $brand-warning);
@include pixel-form-state(error, $state-danger-text, $state-danger-bg, $brand-danger);

.form-message {
  display: none;

  padding-top: 3px;

  .has-success &,
  .has-warning &,
  .has-error & {
    display: block;
  }
}

.form-message.light,
.form-message.dark,
.form-message-light .form-message,
.form-message-dark .form-message {
  position: relative;

  margin-top: 2px;
  padding: 3px $padding-base-horizontal;

  border: 1px solid;
  border-radius: $border-radius-base;
  background-size: 20px 20px !important;

  &:before,
  &:after {
    position: absolute;

    content: "";

    border: none;
    border-right-style: solid;
    border-right-color: transparent;
    border-bottom-style: solid;
    border-left-style: solid;
    border-left-color: transparent;
  }

  &:before {
    top: -($form-help-block-arrow-width / 2);
    left: $padding-base-horizontal;

    border-right-width: ($form-help-block-arrow-width / 2);
    border-bottom-width: ($form-help-block-arrow-width / 2);
    border-bottom-color: inherit;
    border-left-width: ($form-help-block-arrow-width / 2);
  }

  &:after{
    top: -($form-help-block-arrow-width / 2) + 1px;
    left: $padding-base-horizontal + 1px;

    border-right-width: ($form-help-block-arrow-width / 2) - 1px;
    border-bottom-width: ($form-help-block-arrow-width / 2) - 1px;
    border-left-width: ($form-help-block-arrow-width / 2) - 1px;
  }
}

.has-success .control-label,
.has-warning .control-label,
.has-error .control-label {
  color: $text-color;
}

// Message colors
@include form-message-variant(success,
  $state-success-text, $state-success-bg, $state-success-border, // Light
  #fff, $state-dark-success-bg, darken($state-dark-success-bg, 5%) // Dark
);
@include form-message-variant(warning,
  $state-warning-text, $state-warning-bg, $state-warning-border, // Light
  #fff, $state-dark-warning-bg, darken($state-dark-warning-bg, 5%) // Dark
);
@include form-message-variant(error,
  $state-danger-text, $state-danger-bg, $state-danger-border, // Light
  #fff, $state-dark-danger-bg, darken($state-dark-danger-bg, 5%) // Dark
);


// State icons
//

.form-control-success,
.form-control-warning,
.form-control-error {
  $input-height: ($font-size-base * $line-height-base) + ($padding-base-vertical * 2);

  padding-right: $padding-base-horizontal * 3;

  background-repeat: no-repeat;
  background-position: center right ($input-height * .25);
  background-size: ($input-height * .5) ($input-height * .50);
}

.has-success .form-control-success { background-image: $icon-success; }
.has-warning .form-control-warning { background-image: $icon-warning; }
.has-error .form-control-error { background-image: $icon-danger; }


// Horizontal bordered form
//

.form-bordered .form-group {
  margin-right: 0;
  margin-left: 0;
  padding-top: $form-group-margin-bottom;

  + .form-group {
   padding-top: $form-group-margin-bottom;

   border-top: 1px solid $form-bordered-border-color;
  }
}


// Loading state
//

.form-loading {
  position: relative;

  cursor: default;
  user-select: none;
  pointer-events: none;

  &:before {
    position: absolute;
    z-index: $zindex-form-loading;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    display: block;

    content: '';

    background: $dimmer-bg;
  }

  &:after {
    position: absolute;
    z-index: $zindex-form-loading + 1;
    top: 50%;
    left: 50%;

    display: block;

    width: $form-loading-spinner-size;
    height: $form-loading-spinner-size;
    margin: (-$form-loading-spinner-size/2) 0 0 (-$form-loading-spinner-size/2);

    content: '';
    animation: form-spin .6s linear;
    animation-iteration-count: infinite;

    border-width: 2px;
    border-style: solid;
    border-color: $dimmer-spinner-color $dimmer-spinner-bg $dimmer-spinner-bg;
    border-radius: 999px;
  }

  &.form-loading-inverted {
    &:before { background: $dimmer-bg-inverted; }
    &:after { border-color: $dimmer-spinner-color-inverted $dimmer-spinner-bg-inverted $dimmer-spinner-bg-inverted; }
  }
}

.modal-dialog .form-loading {
  &:before { z-index: $zindex-modal + $zindex-form-loading; }
  &:after { z-index: $zindex-modal + $zindex-form-loading + 1; }
}

@include keyframes(form-spin) {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
};
